#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.261
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace houser.Data
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Houser")]
	public partial class PropertyData : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertPropertyRecord(PropertyRecord instance);
    partial void UpdatePropertyRecord(PropertyRecord instance);
    partial void DeletePropertyRecord(PropertyRecord instance);
    partial void InsertSSaleRecord(SSaleRecord instance);
    partial void UpdateSSaleRecord(SSaleRecord instance);
    partial void DeleteSSaleRecord(SSaleRecord instance);
    partial void InsertPropAccount(PropAccount instance);
    partial void UpdatePropAccount(PropAccount instance);
    partial void DeletePropAccount(PropAccount instance);
    partial void InsertPropComp(PropComp instance);
    partial void UpdatePropComp(PropComp instance);
    partial void DeletePropComp(PropComp instance);
    #endregion
		
		public PropertyData() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["HouserConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public PropertyData(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public PropertyData(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public PropertyData(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public PropertyData(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<PropertyRecord> PropertyRecords
		{
			get
			{
				return this.GetTable<PropertyRecord>();
			}
		}
		
		public System.Data.Linq.Table<SSaleRecord> SSaleRecords
		{
			get
			{
				return this.GetTable<SSaleRecord>();
			}
		}
		
		public System.Data.Linq.Table<PropAccount> PropAccounts
		{
			get
			{
				return this.GetTable<PropAccount>();
			}
		}
		
		public System.Data.Linq.Table<PropComp> PropComps
		{
			get
			{
				return this.GetTable<PropComp>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PropertyRecord")]
	public partial class PropertyRecord : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _AccountNumber;
		
		private string _Data;
		
		private System.DateTime _DateCreated;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAccountNumberChanging(string value);
    partial void OnAccountNumberChanged();
    partial void OnDataChanging(string value);
    partial void OnDataChanged();
    partial void OnDateCreatedChanging(System.DateTime value);
    partial void OnDateCreatedChanged();
    #endregion
		
		public PropertyRecord()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountNumber", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string AccountNumber
		{
			get
			{
				return this._AccountNumber;
			}
			set
			{
				if ((this._AccountNumber != value))
				{
					this.OnAccountNumberChanging(value);
					this.SendPropertyChanging();
					this._AccountNumber = value;
					this.SendPropertyChanged("AccountNumber");
					this.OnAccountNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Data", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Data
		{
			get
			{
				return this._Data;
			}
			set
			{
				if ((this._Data != value))
				{
					this.OnDataChanging(value);
					this.SendPropertyChanging();
					this._Data = value;
					this.SendPropertyChanged("Data");
					this.OnDataChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCreated", DbType="DateTime NOT NULL")]
		public System.DateTime DateCreated
		{
			get
			{
				return this._DateCreated;
			}
			set
			{
				if ((this._DateCreated != value))
				{
					this.OnDateCreatedChanging(value);
					this.SendPropertyChanging();
					this._DateCreated = value;
					this.SendPropertyChanged("DateCreated");
					this.OnDateCreatedChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SSaleRecord")]
	public partial class SSaleRecord : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _AccountNumber;
		
		private string _Price;
		
		private string _Note;
		
		private System.Nullable<System.DateTime> _SaleDate;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAccountNumberChanging(string value);
    partial void OnAccountNumberChanged();
    partial void OnPriceChanging(string value);
    partial void OnPriceChanged();
    partial void OnNoteChanging(string value);
    partial void OnNoteChanged();
    partial void OnSaleDateChanging(System.Nullable<System.DateTime> value);
    partial void OnSaleDateChanged();
    #endregion
		
		public SSaleRecord()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountNumber", DbType="VarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string AccountNumber
		{
			get
			{
				return this._AccountNumber;
			}
			set
			{
				if ((this._AccountNumber != value))
				{
					this.OnAccountNumberChanging(value);
					this.SendPropertyChanging();
					this._AccountNumber = value;
					this.SendPropertyChanged("AccountNumber");
					this.OnAccountNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this.OnPriceChanging(value);
					this.SendPropertyChanging();
					this._Price = value;
					this.SendPropertyChanged("Price");
					this.OnPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Note", DbType="VarChar(1000)")]
		public string Note
		{
			get
			{
				return this._Note;
			}
			set
			{
				if ((this._Note != value))
				{
					this.OnNoteChanging(value);
					this.SendPropertyChanging();
					this._Note = value;
					this.SendPropertyChanged("Note");
					this.OnNoteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SaleDate", DbType="Date")]
		public System.Nullable<System.DateTime> SaleDate
		{
			get
			{
				return this._SaleDate;
			}
			set
			{
				if ((this._SaleDate != value))
				{
					this.OnSaleDateChanging(value);
					this.SendPropertyChanging();
					this._SaleDate = value;
					this.SendPropertyChanged("SaleDate");
					this.OnSaleDateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PropAccounts")]
	public partial class PropAccount : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _AccountNumber;
		
		private string _Address;
		
		private string _Sqft;
		
		private string _Beds;
		
		private string _Baths;
		
		private string _YearBuilt;
		
		private string _Exterior;
		
		private string _LastSaleDate;
		
		private string _LastSalePrice;
		
		private System.DateTime _DateModified;
		
		private string _GarageSize;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAccountNumberChanging(string value);
    partial void OnAccountNumberChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnSqftChanging(string value);
    partial void OnSqftChanged();
    partial void OnBedsChanging(string value);
    partial void OnBedsChanged();
    partial void OnBathsChanging(string value);
    partial void OnBathsChanged();
    partial void OnYearBuiltChanging(string value);
    partial void OnYearBuiltChanged();
    partial void OnExteriorChanging(string value);
    partial void OnExteriorChanged();
    partial void OnLastSaleDateChanging(string value);
    partial void OnLastSaleDateChanged();
    partial void OnLastSalePriceChanging(string value);
    partial void OnLastSalePriceChanged();
    partial void OnDateModifiedChanging(System.DateTime value);
    partial void OnDateModifiedChanged();
    partial void OnGarageSizeChanging(string value);
    partial void OnGarageSizeChanged();
    #endregion
		
		public PropAccount()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountNumber", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string AccountNumber
		{
			get
			{
				return this._AccountNumber;
			}
			set
			{
				if ((this._AccountNumber != value))
				{
					this.OnAccountNumberChanging(value);
					this.SendPropertyChanging();
					this._AccountNumber = value;
					this.SendPropertyChanged("AccountNumber");
					this.OnAccountNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="VarChar(50)")]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sqft", DbType="VarChar(50)")]
		public string Sqft
		{
			get
			{
				return this._Sqft;
			}
			set
			{
				if ((this._Sqft != value))
				{
					this.OnSqftChanging(value);
					this.SendPropertyChanging();
					this._Sqft = value;
					this.SendPropertyChanged("Sqft");
					this.OnSqftChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Beds", DbType="VarChar(50)")]
		public string Beds
		{
			get
			{
				return this._Beds;
			}
			set
			{
				if ((this._Beds != value))
				{
					this.OnBedsChanging(value);
					this.SendPropertyChanging();
					this._Beds = value;
					this.SendPropertyChanged("Beds");
					this.OnBedsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Baths", DbType="VarChar(50)")]
		public string Baths
		{
			get
			{
				return this._Baths;
			}
			set
			{
				if ((this._Baths != value))
				{
					this.OnBathsChanging(value);
					this.SendPropertyChanging();
					this._Baths = value;
					this.SendPropertyChanged("Baths");
					this.OnBathsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_YearBuilt", DbType="VarChar(50)")]
		public string YearBuilt
		{
			get
			{
				return this._YearBuilt;
			}
			set
			{
				if ((this._YearBuilt != value))
				{
					this.OnYearBuiltChanging(value);
					this.SendPropertyChanging();
					this._YearBuilt = value;
					this.SendPropertyChanged("YearBuilt");
					this.OnYearBuiltChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Exterior", DbType="VarChar(50)")]
		public string Exterior
		{
			get
			{
				return this._Exterior;
			}
			set
			{
				if ((this._Exterior != value))
				{
					this.OnExteriorChanging(value);
					this.SendPropertyChanging();
					this._Exterior = value;
					this.SendPropertyChanged("Exterior");
					this.OnExteriorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastSaleDate", DbType="VarChar(50)")]
		public string LastSaleDate
		{
			get
			{
				return this._LastSaleDate;
			}
			set
			{
				if ((this._LastSaleDate != value))
				{
					this.OnLastSaleDateChanging(value);
					this.SendPropertyChanging();
					this._LastSaleDate = value;
					this.SendPropertyChanged("LastSaleDate");
					this.OnLastSaleDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastSalePrice", DbType="VarChar(50)")]
		public string LastSalePrice
		{
			get
			{
				return this._LastSalePrice;
			}
			set
			{
				if ((this._LastSalePrice != value))
				{
					this.OnLastSalePriceChanging(value);
					this.SendPropertyChanging();
					this._LastSalePrice = value;
					this.SendPropertyChanged("LastSalePrice");
					this.OnLastSalePriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateModified", DbType="Date NOT NULL")]
		public System.DateTime DateModified
		{
			get
			{
				return this._DateModified;
			}
			set
			{
				if ((this._DateModified != value))
				{
					this.OnDateModifiedChanging(value);
					this.SendPropertyChanging();
					this._DateModified = value;
					this.SendPropertyChanged("DateModified");
					this.OnDateModifiedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GarageSize", DbType="VarChar(50)")]
		public string GarageSize
		{
			get
			{
				return this._GarageSize;
			}
			set
			{
				if ((this._GarageSize != value))
				{
					this.OnGarageSizeChanging(value);
					this.SendPropertyChanging();
					this._GarageSize = value;
					this.SendPropertyChanged("GarageSize");
					this.OnGarageSizeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PropComps")]
	public partial class PropComp : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _PropertyAccount;
		
		private string _CompAccount;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPropertyAccountChanging(string value);
    partial void OnPropertyAccountChanged();
    partial void OnCompAccountChanging(string value);
    partial void OnCompAccountChanged();
    #endregion
		
		public PropComp()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PropertyAccount", DbType="VarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string PropertyAccount
		{
			get
			{
				return this._PropertyAccount;
			}
			set
			{
				if ((this._PropertyAccount != value))
				{
					this.OnPropertyAccountChanging(value);
					this.SendPropertyChanging();
					this._PropertyAccount = value;
					this.SendPropertyChanged("PropertyAccount");
					this.OnPropertyAccountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompAccount", DbType="VarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string CompAccount
		{
			get
			{
				return this._CompAccount;
			}
			set
			{
				if ((this._CompAccount != value))
				{
					this.OnCompAccountChanging(value);
					this.SendPropertyChanging();
					this._CompAccount = value;
					this.SendPropertyChanged("CompAccount");
					this.OnCompAccountChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
